group 'worth'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}


apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'


war {
    baseName = 'ifs-data-service'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}
configurations {
    providedRuntime
    clientCompile
}

sourceSets {
    client {
        java {
            srcDir 'src/main/java'
            include 'com/worth/ifs/domain'
        }
    }
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("mysql:mysql-connector-java")
    compile("org.springframework:spring-web")
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("org.projectlombok:lombok:1.16.2")
    //providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    testCompile group: 'junit', name: 'junit', version: '4.11'

    // for the api lib:
    compile group: 'javax.persistence', name: 'persistence-api', version: '1.0'
    clientCompile group: 'javax.persistence', name: 'persistence-api', version: '1.0'
    compile fileTree(dir: "libs", include: "*.jar")
}

task client(type: Jar) {
    baseName += '-api'
    from(sourceSets.main.output) {
        // filter to only include certain class files (Ant glob pattern)
        include "com/worth/ifs/service/**"
        include "com/worth/ifs/domain/**"
    }
}
task clientCopy(type: Copy){
    into "../ifs-web-service/libs"
    from "build/libs/"
    include("ifs-data-service-api*")
}

artifacts {
    archives client
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

task deployToTomcat(type: Copy) {
    from war
    into "../../apache-tomcat-data/webapps"
    rename ('(.*).war', 'ROOT.war')
}
